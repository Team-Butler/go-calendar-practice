// Code generated by entc, DO NOT EDIT.

package ent

import (
	"go-calendar-practice/db/ent/schedule"
	"go-calendar-practice/db/ent/schema"
	"go-calendar-practice/db/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	scheduleFields := schema.Schedule{}.Fields()
	_ = scheduleFields
	// scheduleDescTitle is the schema descriptor for title field.
	scheduleDescTitle := scheduleFields[1].Descriptor()
	// schedule.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	schedule.TitleValidator = scheduleDescTitle.Validators[0].(func(string) error)
	// scheduleDescID is the schema descriptor for id field.
	scheduleDescID := scheduleFields[0].Descriptor()
	// schedule.IDValidator is a validator for the "id" field. It is called by the builders before save.
	schedule.IDValidator = scheduleDescID.Validators[0].(func(int) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreateAt is the schema descriptor for createAt field.
	userDescCreateAt := userFields[2].Descriptor()
	// user.DefaultCreateAt holds the default value on creation for the createAt field.
	user.DefaultCreateAt = userDescCreateAt.Default.(time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.IDValidator is a validator for the "id" field. It is called by the builders before save.
	user.IDValidator = userDescID.Validators[0].(func(int) error)
}
